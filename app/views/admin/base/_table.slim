- allow_edit = false unless defined? :allow_edit
- parent = nil unless defined? :parent
- if scope.empty?
  p.text-info Nothing here
- else
  .table-sticky-container
    table.table.table-condensed.table-striped.table-narrow
      thead.bg-white
        tr
          - columns.each do |column|
            th title=column
              =column
              / = decorator_class.attribute_title column
              / - if params[:show_attribute]
              /   br
              /   code.text-small= column
          th
      tbody
        - scope.each do |record|
          - decorated = record.decorate!
          tr class=decorated.try(:row_class)
            - columns.each do |column|
              td class=(decorated.try(:column_class, column) || 'text-nowrap')
                - if allow_edit && allow_edit_column?(record, column)
                  - value = record.send column
                  = smart_best_in_place [namespace, parent, decorated].compact, column, value
                - else
                  = decorated.send column
            td
              = link_to 'Редактировать', polymorphic_url([:edit, :admin, record])
              | &nbsp;
              - link_to 'Destroy', polymorphic_url([:admin, record]), method: :delete, data: { confirm: 'Confirm please' }

  = paginate scope if scope.respond_to? :total_pages
